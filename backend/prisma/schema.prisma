generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @unique @default(uuid())
  email    String @unique
  name     String
  phone    String
  password String
  role     Role
}

model Patient {
  id                String        @id @unique @default(uuid())
  firstName         String
  lastName          String
  email             String        @unique
  phoneNumber       String
  birthDate         String
  gender            String
  idNumber          String
  permanentLocation Json
  password          String
  createdAt         DateTime      @default(now())
  role              Role          @default(patient)
  status            PatientStatus @default(active)

  appointments Appointment[]

  feedback Feedback[]

  doctorId String?
  doctor   Doctor? @relation(fields: [doctorId], references: [id])

  requests AmbulanceRequest[]
}

model Doctor {
  id                 String  @id @unique @default(uuid())
  firstName          String
  lastName           String
  email              String  @unique
  phone              String
  gender             String
  specialization     String
  licenseNumber      String
  registrationNumber String
  password           String
  idFront            String?
  idBack             String?
  certificate        String?
  role               Role    @default(doctor)

  appointments Appointment[]
  patients     Patient[]
}

model Appointment {
  id                String   @id @unique @default(uuid())
  schedule          DateTime
  status            Status   @default(scheduled)
  // primaryPhysician  String
  patientName       String
  reason            String
  // patient Patient[]
  cancelationReason String?

  patientId String?
  patient   Patient? @relation(fields: [patientId], references: [id])

  doctorId String?
  doctor   Doctor? @relation(fields: [doctorId], references: [id])
}

model Ambulance {
  id            String          @id @unique @default(uuid())
  name          String
  licenseNumber String
  location      Json
  type          String
  owner         String
  status        AmbulanceStatus @default(available)

  requests AmbulanceRequest[]
}

model AmbulanceRequest {
  id            String        @id @unique @default(uuid())
  aidCarType    String
  selectedItems Json
  createdAt     DateTime      @default(now())
  status        RequestStatus @default(pending)

  patientId   String
  ambulanceId String?

  ambulance Ambulance? @relation(fields: [ambulanceId], references: [id])
  patient   Patient    @relation(fields: [patientId], references: [id])
}

model Feedback {
  id      String @id @unique @default(uuid())
  content String

  userId String
  user   Patient @relation(fields: [userId], references: [id])
}

enum Role {
  doctor
  patient
  admin
}

enum Status {
  scheduled
  approved
  canceled
  completed
}

enum AmbulanceStatus {
  available
  assinged
  on_route
  mantainace
}

enum RequestStatus {
  pending
  accepted
  completed
}

enum PatientStatus {
  active
  scheduled
  followeup
}

enum AmbulanceType {
  Basic
  Advanced
  Motuary
  Patient
}
